import BaseObject from './BaseObject';
import { ThreeLayer } from './index';
declare type TaskQueue = {
    id: string;
    data: any;
    layer: ThreeLayer;
    baseObject: BaseObject;
    key?: string;
    center?: any;
    lineStrings?: any;
    lineString?: any;
};
declare class BaseObjectTask {
    queueMap: {
        [key: string]: TaskQueue;
    };
    tempQueue: Array<TaskQueue>;
    time: number;
    deQueueCount: number;
    resultQueue: Array<any>;
    constructor();
    getCurrentTime(): number;
    loop(): void;
    push(data: TaskQueue): this;
    reset(): this;
    pushResult(result: any): this;
    deQueue(): this;
}
declare class ExtrudePolygonTask extends BaseObjectTask {
    constructor();
    loop(): void;
}
declare class ExtrudePolygonsTask extends BaseObjectTask {
    loop(): void;
}
declare class ExtrudeLineTask extends BaseObjectTask {
    constructor();
    loop(): void;
}
declare class ExtrudeLinesTask extends BaseObjectTask {
    loop(): void;
}
declare class LineTask extends BaseObjectTask {
    constructor();
    loop(): void;
}
declare class LinesTask extends BaseObjectTask {
    loop(): void;
}
declare class FatLineTask extends BaseObjectTask {
    constructor();
    loop(): void;
}
declare class FatLinesTask extends BaseObjectTask {
    loop(): void;
}
export declare const ExtrudePolygonTaskIns: ExtrudePolygonTask;
export declare const ExtrudePolygonsTaskIns: ExtrudePolygonsTask;
export declare const ExtrudeLineTaskIns: ExtrudeLineTask;
export declare const ExtrudeLinesTaskIns: ExtrudeLinesTask;
export declare const LineTaskIns: LineTask;
export declare const LinesTaskIns: LinesTask;
export declare const FatLineTaskIns: FatLineTask;
export declare const FatLinesTaskIns: FatLinesTask;
export declare const BaseObjectTaskManager: {
    isRunning: boolean;
    loop(): void;
    star(): void;
};
export {};
